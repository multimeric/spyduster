{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Spyduster","text":"<p>Web scraping client for the Spydus library system.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>uv add https://github.com/multimeric/spyduster\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code>from spyduster import Record, Collection\nimport json\n\n# Search for books by Jorge Luis Borges.\n# Obtain this search URL by using your browser\nborges = Collection(r\"https://YOUR_LIBRARY.spydus.com/cgi-bin/spydus.exe/ENQ/WPAC/BIBENQ/77999253?QRY=CAUBIB%3C%20IRN(44070117)&amp;QRYTEXT=Borges%2C%20Jorge%20Luis%2C%201899-1986\")\nfor book in borges.iter_full_results():\n    print(json.dumps(book.properties, indent=4))\n</code></pre> <p>Will print something like:</p> <pre><code>{\n    \"Main title\": [\n        \"Brodie's report [text] : including the prose fiction from In praise of darkness / Jorge Luis Borges ; translated with an afterword by Andrew Hurley.\"\n    ],\n    \"Author\": [\n        \"Borges, Jorge Luis, 1899-1986\"\n    ],\n    \"Imprint\": [\n        \"London : Penguin, 2000.\"\n    ],\n    \"Collation\": [\n        \"131 p.\"\n    ],\n    \"ISBN\": [\n        \"0141183861\"\n    ],\n    \"BRN\": [\n        \"224479\"\n    ]\n}\n{\n    \"Main title\": [\n        \"Fictions / Jorge Luis Borges ; translated with an afterword by Andrew Hurley.\"\n    ],\n    \"Author\": [\n        \"Borges, Jorge Luis, 1899-1986, author\",\n        \"Hurley, Andrew, 1944-, translator, author of afterword, colophon, etc\"\n    ],\n    \"Imprint\": [\n        \"London : Penguin Books, 2000.\",\n        \"\\u00a91998.\"\n    ],\n    \"Collation\": [\n        \"178 pages ; 20 cm.\"\n    ],\n    \"Notes\": [\n        \"These translations originally published in Collected fictions: United States : Viking Penguin, 1998.\",\n        \"Short stories.\",\n        \"Translated from the Spanish.\"\n    ],\n    \"Contents\": [\n        \"FICTIONS. The garden of  forking paths. Tlon, Uqbar, Orbis tertius -- The approach to Al-Mu'tasim -- Pierre Menard, author of the Quixote -- The circular ruins -- The lottery in Babylon -- A survey of the works of Herbert Quain -- The library of Babel -- The garden of forking paths -- ARTIFICES. Funes, his memory -- The shape of the sword -- The theme of the traitor and the hero -- Death and the compass -- The secret miracle -- Three versions of Judas -- The end -- The cult of the phoenix -- The south.\"\n    ],\n    \"ISBN\": [\n        \"9780141183848 (paperback)\"\n    ],\n    \"Language\": [\n        \"English\",\n        \"Spanish\"\n    ],\n    \"Added title\": [\n        \"Ficciones. English. (Hurley)\",\n        \"Collected fictions\"\n    ],\n    \"Subject\": [\n        \"Borges, Jorge Luis, 1899-1986 -- Translations into English\",\n        \"Short stories, Argentine -- Translations into English\",\n        \"Argentine fiction -- Translations into English\",\n        \"Argentine literature -- Translations into English\"\n    ],\n    \"BRN\": [\n        \"62706\"\n    ]\n}\n</code></pre>"},{"location":"api/","title":"API","text":""},{"location":"api/#spyduster.Record","title":"<code>spyduster.Record</code>  <code>dataclass</code>","text":"<p>Represents a single record in the library catalog.</p>"},{"location":"api/#spyduster.Record.availability_link","title":"<code>availability_link: str</code>  <code>cached</code> <code>property</code>","text":"<p>The link to the availability page for this record.</p>"},{"location":"api/#spyduster.Record.full_availability","title":"<code>full_availability: Availability</code>  <code>property</code>","text":"<p>The parsed availability page for this record.</p>"},{"location":"api/#spyduster.Record.properties","title":"<code>properties: dict[str, list[str]]</code>  <code>cached</code> <code>property</code>","text":"<p>A dictionary of raw property values for the record. Keys are property names such as \"Title\", \"Author\" etc, and values are a list of paragraphs corresponding to the property. Unfortunately the keys are not standardized and depend on the record in question.</p>"},{"location":"api/#spyduster.Record.properties_raw","title":"<code>properties_raw: dict[str, Tag]</code>  <code>cached</code> <code>property</code>","text":"<p>A dictionary of raw property values for the record. Keys are property names such as \"Title\", \"Author\" etc, and values are the corresponding HTML tags. Unfortunately the keys are not standardized and depend on the record in question.</p>"},{"location":"api/#spyduster.Record.subcollection","title":"<code>subcollection: Collection</code>  <code>property</code>","text":"<p>The subcollection of this record, as a Collection object. This is a collection of other records that are make up this record.</p>"},{"location":"api/#spyduster.Record.subcollection_count","title":"<code>subcollection_count: int</code>  <code>cached</code> <code>property</code>","text":"<p>The number of subcollections in this record. If this is zero, the record likely has no subcollections.</p>"},{"location":"api/#spyduster.Record.subcollection_link","title":"<code>subcollection_link: str</code>  <code>cached</code> <code>property</code>","text":"<p>The link to the subcollection of this record. This is a collection of other records that are make up this record.</p>"},{"location":"api/#spyduster.Record.yield_downloads","title":"<code>yield_downloads(out_dir: Path) -&gt; Iterable[Path]</code>","text":"<p>Visits all leaf records, and if any of them have a download link, downloads the file to the given directory.</p>"},{"location":"api/#spyduster.Record.yield_leaves","title":"<code>yield_leaves() -&gt; Iterable[Record]</code>","text":"<p>Starting with this record, visits all sub records by following the subcollection links. Yields records that have no subcollections.</p>"},{"location":"api/#spyduster.Collection","title":"<code>spyduster.Collection</code>  <code>dataclass</code>","text":"<p>Represents a collection of records in the library catalog. For example, the search results for a query.</p>"},{"location":"api/#spyduster.Collection.count","title":"<code>count: int</code>  <code>cached</code> <code>property</code>","text":"<p>The total number of records in the collection. Note that this is not the number of records displayed on the current page.</p>"},{"location":"api/#spyduster.Collection.next_page_url","title":"<code>next_page_url: str</code>  <code>cached</code> <code>property</code>","text":"<p>Link to the next page of the collection. If there is no next page, this fails with a ValueError.</p>"},{"location":"api/#spyduster.Collection.records_raw","title":"<code>records_raw: Iterable[Tag]</code>  <code>property</code>","text":"<p>Yields the raw HTML elements of the records in the collection that are displayed on the current page. Note that this does not include subsequent pages, but you can use the <code>next_page</code> method to get the next page.</p>"},{"location":"api/#spyduster.Collection.iter_all_links","title":"<code>iter_all_links() -&gt; Iterable[str]</code>","text":"<p>Yield all links to the full record pages in this collection, including those on subsequent pages.</p>"},{"location":"api/#spyduster.Collection.iter_full_results","title":"<code>iter_full_results(all_pages: bool = True) -&gt; Iterable[Record]</code>","text":"<p>Yields parsed Record objects for all records in the collection.</p>"},{"location":"api/#spyduster.Collection.iter_links","title":"<code>iter_links() -&gt; Iterable[str]</code>","text":"<p>Yields the links to the full record pages.</p> <p>Interestingly, these links are different each time. It seems that they encode the search query in their URL.</p>"},{"location":"api/#spyduster.Collection.next_page","title":"<code>next_page() -&gt; Collection</code>","text":"<p>A parsed version of the next page of the collection. If there is no next page, this fails with a ValueError.</p>"},{"location":"api/#spyduster.Availability","title":"<code>spyduster.Availability</code>  <code>dataclass</code>","text":"<p>Represents the availability of a record in the library catalog.</p>"},{"location":"api/#spyduster.Availability.download_link","title":"<code>download_link: str</code>  <code>property</code>","text":"<p>Finds a download link in the availability table. If no download link is found, this fails with a ValueError. This only makes sense for digital items.</p>"},{"location":"api/#spyduster.Availability.entries","title":"<code>entries: Iterable[dict[str, str]]</code>  <code>property</code>","text":"<p>Yields rows of the availability table as dictionaries. Keys are the column headers.</p>"},{"location":"api/#spyduster.Availability.headers","title":"<code>headers: list[str]</code>  <code>cached</code> <code>property</code>","text":"<p>The column headers of the availability table.</p>"}]}